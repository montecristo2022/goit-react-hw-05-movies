{"version":3,"file":"static/js/574.24c9bd1b.chunk.js","mappings":"iQAEaA,EAAcC,EAAAA,GAAAA,KAAH,uEAMXC,EAAgBD,EAAAA,GAAAA,KAAH,8FAMbE,EAAQF,EAAAA,GAAAA,MAAH,qEAILG,EAASH,EAAAA,GAAAA,OAAH,wEAKNI,EAAQJ,EAAAA,GAAAA,IAAH,2DAKLK,EAAYL,EAAAA,GAAAA,GAAH,8DAKTM,EAAaN,EAAAA,GAAAA,EAAH,qFAMjBO,GAAOC,EAAAA,EAAAA,IAAH,sFAUGC,EAAkBT,EAAAA,GAAAA,GAAH,wGACbO,GAIFG,EAAqBV,EAAAA,GAAAA,IAAH,sE,SC+C/B,EArFe,WACb,IAAMW,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAIrC,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KAkCA,OAlBAC,EAAAA,EAAAA,YAAU,WACJT,GACFU,MAAM,qDAAD,OArBO,mCAqBP,iCACkFV,EADlF,gCAGFW,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,MACjB,IACAL,MAAK,SAAAM,GACJb,EAAaa,EAAKC,QACnB,GAEN,GAAE,CAAClB,KAGF,UAACjB,EAAD,YACE,UAACE,EAAD,CAAekC,SA9BnB,SAAsBC,GACpBZ,EAAU,IACV,IAAMa,EAAOD,EAAEE,cACfC,QAAQC,IAAIH,EAAKI,SAASC,QAAQC,OAElCP,EAAEQ,iBACF7B,EAAgB,CAAE8B,OAAQR,EAAKI,SAASC,QAAQC,QAChDrB,GAAa,EACd,EAsBG,WACE,SAACpB,EAAD,CACE4C,KAAK,OACLC,GAAG,UACHC,KAAK,UACLC,SAvCR,SAAsBC,GACpB1B,EAAU0B,EAAMC,OAAOR,MACxB,EAsCOA,MAAOpB,KAET,SAACpB,EAAD,CAAQ2C,KAAK,SAAb,0BAEe,KAAhB9B,EACGG,EAAUiC,KAAI,SAAAC,GACZ,OACE,UAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKN,IAAoBQ,MAAO,CAAEC,KAAM7C,GAArD,WACE,SAACP,EAAD,CACEqD,IACEJ,EAAKK,YAAL,yCACsCL,EAAKK,aAzD3D,gHA4DcC,IAAI,MAEN,UAACtD,EAAD,6BAA2BgD,EAAKO,mBAChC,UAACtD,EAAD,8BAA6B+C,EAAKQ,kBAVPR,EAAKN,GAarC,IACD,KACH5B,EAAU2C,OAAS,IAAmB,IAAdzC,GACvB,SAACX,EAAD,WACE,UAACD,EAAD,6BACkBO,EADlB,sBAIA,OAGT,C","sources":["components/StyledComponent/Movies.styled.jsx","components/Pages/Movies.jsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nexport const MainContent = styled.main`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\n\nexport const SearchWrapper = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  padding-top: 6px;\n  padding-bottom: 6px;\n`;\nexport const Button = styled.button`\n  cursor: pointer;\n  border: 1px black solid;\n`;\n\nexport const Image = styled.img`\n  width: 550px;\n  height: 750px;\n`;\n\nexport const FilmTitle = styled.h2`\n  margin-top: 10px;\n  color: black;\n`;\n\nexport const FilmRating = styled.p`\n  margin-top: 5px;\n  margin-bottom: 20px;\n  color: black;\n`;\n\nconst fade = keyframes`\nfrom {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const UserMistakeText = styled.h2`\n  animation: ${fade} 3s linear infinite alternate;\n  animation-iteration-count: 1;\n`;\n\nexport const UserMistakeWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport {\n  MainContent,\n  Input,\n  Button,\n  SearchWrapper,\n  UserMistakeWrapper,\n  UserMistakeText,\n  Image,\n  FilmRating,\n  FilmTitle,\n} from 'components/StyledComponent/Movies.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchValue = searchParams.get('search');\n  const standartPicture =\n    'https://img.freepik.com/premium-vector/big-problem-businesswomen-sits-on-the-question-mark-sign_70921-125.jpg';\n  const API_KEY = 'dfb50cc3b16f950a5a6b0ea437e17f05';\n  const [filmArray, setFilmArray] = useState([]);\n  const [MyBoolean, setMyBoolean] = useState(false);\n  const [querry, setQuerry] = useState('');\n\n  function handleChange(event) {\n    setQuerry(event.target.value);\n  }\n\n  function handleSubmit(e) {\n    setQuerry('');\n    const form = e.currentTarget;\n    console.log(form.elements.message.value);\n\n    e.preventDefault();\n    setSearchParams({ search: form.elements.message.value });\n    setMyBoolean(true);\n  }\n\n  useEffect(() => {\n    if (searchValue) {\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchValue}&page=1&include_adult=false`\n      )\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(response.status);\n          }\n\n          return response.json();\n        })\n        .then(data => {\n          setFilmArray(data.results);\n        });\n    }\n  }, [searchValue]);\n\n  return (\n    <MainContent>\n      <SearchWrapper onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          id=\"message\"\n          name=\"message\"\n          onChange={handleChange}\n          value={querry}\n        />\n        <Button type=\"submit\">Find film</Button>\n      </SearchWrapper>\n      {searchValue !== ''\n        ? filmArray.map(film => {\n            return (\n              <Link to={`${film.id}`} key={film.id} state={{ from: location }}>\n                <Image\n                  src={\n                    film.poster_path\n                      ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n                      : standartPicture\n                  }\n                  alt=\"\"\n                />\n                <FilmTitle>Name of movie: {film.original_title}</FilmTitle>\n                <FilmRating>Average rating: {film.vote_average}</FilmRating>\n              </Link>\n            );\n          })\n        : null}\n      {filmArray.length < 1 && MyBoolean === true ? (\n        <UserMistakeWrapper>\n          <UserMistakeText>\n            Film with name {searchValue} is not exist.\n          </UserMistakeText>\n        </UserMistakeWrapper>\n      ) : null}\n    </MainContent>\n  );\n};\n\nexport default Movies;\n\n// import { useState } from 'react';\n// import { useEffect } from 'react';\n// import { Link, useSearchParams } from 'react-router-dom';\n// import { useLocation } from 'react-router-dom';\n// import {\n//   MainContent,\n//   Input,\n//   Button,\n//   SearchWrapper,\n//   UserMistakeWrapper,\n//   UserMistakeText,\n//   Image,\n//   FilmRating,\n//   FilmTitle,\n// } from 'components/StyledComponent/Movies.styled';\n\n// const Movies = () => {\n//   const location = useLocation();\n\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const searchValue = searchParams.get('search');\n//   const standartPicture =\n//     'https://img.freepik.com/premium-vector/big-problem-businesswomen-sits-on-the-question-mark-sign_70921-125.jpg';\n//   const API_KEY = 'dfb50cc3b16f950a5a6b0ea437e17f05';\n//   const [filmArray, setFilmArray] = useState([]);\n//   const [MyBoolean, setMyBoolean] = useState(false);\n//   const [querry, setQuerry] = useState('');\n//   const [submitData, setSubmitData] = useState('');\n\n//   function handleChange(event) {\n//     setQuerry(event.target.value);\n//   }\n\n//   function recieveInputData(event) {\n//     setQuerry('');\n//     event.preventDefault();\n//     setSubmitData(querry);\n//     setMyBoolean(true);\n//   }\n\n//   useEffect(() => {\n//     if (submitData !== '') {\n//       setSearchParams({ search: submitData });\n//       fetch(\n//         `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${submitData}&page=1&include_adult=false`\n//       )\n//         .then(response => {\n//           if (!response.ok) {\n//             throw new Error(response.status);\n//           }\n\n//           return response.json();\n//         })\n//         .then(data => {\n//           setFilmArray(data.results);\n//         });\n//     }\n//   }, [setSearchParams, submitData]);\n\n//   return (\n//     <MainContent>\n//       <SearchWrapper>\n//         <Input\n//           type=\"text\"\n//           id=\"message\"\n//           name=\"message\"\n//           onChange={handleChange}\n//           value={querry}\n//         />\n//         <Button type=\"submit\" onClick={recieveInputData}>\n//           Find film\n//         </Button>\n//       </SearchWrapper>\n//       {submitData !== ''\n//         ? filmArray.map(film => {\n//             return (\n//               <Link to={`${film.id}`} key={film.id} state={{ from: location }}>\n//                 <Image\n//                   src={\n//                     film.poster_path\n//                       ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n//                       : standartPicture\n//                   }\n//                   alt=\"\"\n//                 />\n//                 <FilmTitle>Name of movie: {film.original_title}</FilmTitle>\n//                 <FilmRating>Average rating: {film.vote_average}</FilmRating>\n//               </Link>\n//             );\n//           })\n//         : null}\n//       {filmArray.length < 1 && MyBoolean === true ? (\n//         <UserMistakeWrapper>\n//           <UserMistakeText>\n//             Film with name {submitData} is not exist.\n//           </UserMistakeText>\n//         </UserMistakeWrapper>\n//       ) : null}\n//     </MainContent>\n//   );\n// };\n\n// export default Movies;\n"],"names":["MainContent","styled","SearchWrapper","Input","Button","Image","FilmTitle","FilmRating","fade","keyframes","UserMistakeText","UserMistakeWrapper","location","useLocation","useSearchParams","searchParams","setSearchParams","searchValue","get","useState","filmArray","setFilmArray","MyBoolean","setMyBoolean","querry","setQuerry","useEffect","fetch","then","response","ok","Error","status","json","data","results","onSubmit","e","form","currentTarget","console","log","elements","message","value","preventDefault","search","type","id","name","onChange","event","target","map","film","to","state","from","src","poster_path","alt","original_title","vote_average","length"],"sourceRoot":""}