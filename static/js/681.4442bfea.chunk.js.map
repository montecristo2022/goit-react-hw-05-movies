{"version":3,"file":"static/js/681.4442bfea.chunk.js","mappings":"8OAEaA,EAAoBC,EAAAA,GAAAA,QAAH,8CAKjBC,EAAWD,EAAAA,GAAAA,GAAH,wKAYRE,EAAOF,EAAAA,GAAAA,QAAH,6D,SCgCjB,EA3Cc,WACZ,IACA,GAAkCG,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCH,EADnC,4BALS,mCAKT,oBAGFI,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,MACjB,IACAL,MAAK,SAAAM,GACJX,EAAaW,EAAKC,KACnB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAR,iBAAsBF,GACvB,GACJ,GAAE,CAACb,KAGF,UAACP,EAAD,YACE,+CAECK,EAAUkB,OAAS,EAClBlB,EAAUmB,KAAI,SAAAC,GACZ,OACE,UAACvB,EAAD,oBACSuB,EAASC,KADlB,KAC0BD,EAASE,MADpBF,EAASG,UAI3B,KAED,SAACzB,EAAD,qDAIP,C","sources":["components/StyledComponent/Actor.styled.jsx","components/Actor.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmActorsWrapper = styled.section`\nmargin-bottom: 50px;\n`;\n\n\nexport const OneActor = styled.li`\ndisplay: flex;\njustify-content: start;\n/* margin-left: auto; */\nmargin-left: 33%;\nmargin-top: 7px;\nfont-size: 20px;\nfont-weight: 400;\n}\n`\n\n\nexport const Text = styled.section`\nfont-size: 20px;\nmargin-top: 10px;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  FilmActorsWrapper,\n  OneActor,\n  Text,\n} from './StyledComponent/Actor.styled';\n\nconst Actor = () => {\n  const API_KEY = 'dfb50cc3b16f950a5a6b0ea437e17f05';\n  const [filmArray, setFilmArray] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n\n        return response.json();\n      })\n      .then(data => {\n        setFilmArray(data.crew);\n      })\n      .catch(error => {\n        console.log(`error: ${error}`);\n      });\n  }, [id]);\n\n  return (\n    <FilmActorsWrapper>\n      <h2>Worked on the film</h2>\n\n      {filmArray.length > 0 ? (\n        filmArray.map(oneActor => {\n          return (\n            <OneActor key={oneActor.credit_id}>\n              Name: {oneActor.name}, {oneActor.job}\n            </OneActor>\n          );\n        })\n      ) : (\n        <Text>unfortunately, we dont know the cast</Text>\n      )}\n    </FilmActorsWrapper>\n  );\n};\n\nexport default Actor;\n"],"names":["FilmActorsWrapper","styled","OneActor","Text","useState","filmArray","setFilmArray","id","useParams","useEffect","fetch","then","response","ok","Error","status","json","data","crew","catch","error","console","log","length","map","oneActor","name","job","credit_id"],"sourceRoot":""}