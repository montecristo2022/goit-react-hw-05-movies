{"version":3,"file":"static/js/785.6f944b94.chunk.js","mappings":"wQAIaA,EAAcC,EAAAA,GAAAA,KAAH,+CAKXC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uJASVG,GAAiBH,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,0CAKdI,EAAUJ,EAAAA,GAAAA,IAAH,8CAIPK,EAAWL,EAAAA,GAAAA,GAAH,8CAIRM,EAAWN,EAAAA,GAAAA,EAAH,yHAQRO,EAAgBP,EAAAA,GAAAA,IAAH,kEAKbQ,EAAaR,EAAAA,GAAAA,EAAH,+DAKVS,EAAST,EAAAA,GAAAA,EAAH,8DAKNU,EAAgBV,EAAAA,GAAAA,EAAH,gEAKbW,EAAYX,EAAAA,GAAAA,GAAH,8C,SCkCtB,EA5EoB,WAAO,IAAD,MAExB,GAAkCY,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCL,EADnC,oBARS,mCAQT,oBAGFM,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAG3B,OAAOH,EAASI,MACjB,IACAL,MAAK,SAAAM,GACJb,EAAaa,EACd,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAR,iBAAsBF,GACvB,GACJ,GAAE,CAACd,IAEJ,IAAMiB,EAAY,iBAAGf,QAAH,IAAGA,GAAH,UAAGA,EAAUgB,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAE9C,OACE,UAACnC,EAAD,YACE,SAACE,EAAD,CAAYkC,GAAIH,EAAhB,qBACA,4BACE,SAAC5B,EAAD,CACEgC,IACEvB,EAAUwB,YAAV,yCACsCxB,EAAUwB,aA9BxD,gHAiCMC,IAAI,wBAEN,SAACjC,EAAD,UAAWQ,EAAU0B,kBACrB,UAACjC,EAAD,yBAAsBO,EAAU2B,aAEhC,UAACjC,EAAD,YACE,SAACC,EAAD,2BACsBiC,IAArB5B,EAAU6B,OACP7B,EAAU6B,OAAOC,KAAI,SAAAC,GACnB,OAAO,SAACnC,EAAD,UAA2BmC,EAASC,MAAvBD,EAAS7B,GAC9B,IACD,YAGN,UAACL,EAAD,wCACmBG,EAAUiC,oBAD7B,aACmB,EAAwBC,QAAQ,UAGrD,UAACpC,EAAD,YACE,yBACE,SAACR,EAAD,CAAgBgC,GAAG,QAAQF,MAAO,CAAEC,KAAMF,GAA1C,2BAIF,yBACE,SAAC7B,EAAD,CAAgBgC,GAAG,SAASF,MAAO,CAAEC,KAAMF,GAA3C,2BAKJ,SAAC,EAAAgB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/StyledComponent/OneFilmPage.styled.jsx","components/OneFilmPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nexport const MainContent = styled.main`\ntext-align: center;\n\n`;\n\nexport const StyledLink = styled(Link)`\nfont-size: 20px;\nmargin-left -70%;\nbackground-color: grey;\ncolor: white;\npadding: 5px 10px 5px 10px;\nborder-radius: 4px;\n`\n\nexport const StyledFilmLink = styled(Link)`\nfont-size: 20px;\n`\n\n\nexport const FilmImg = styled.img`\nmargin-bottom: 20px;\n`\n\nexport const FilTitle = styled.h2`\nmargin-bottom: 10px;\n`\n\nexport const Overview = styled.p`\nwidth: 500px;\nmargin-left: auto; \nmargin-right: auto;\nmargin-bottom: 20px;\nfont-size: 20px;\n`;\n\nexport const GenresWrapper = styled.div `\ndisplay: flex;\njustify-content: center;\n`\n\nexport const GenresText = styled.p`\nmargin-right: 10px;\nfont-size: 20px;\n`\n\nexport const Genres = styled.p`\nmargin-right: 5px;\nfont-size: 20px;\n`\n\nexport const AverageRating = styled.p`\nmargin-bottom: 10px;\nfont-size: 20px;\n`\n\nexport const LiWrapper = styled.ul`\nmargin-bottom: 50px;\n`\n\n\n\n\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Suspense } from 'react';\nimport {\n  MainContent,\n  Overview,\n  GenresWrapper,\n  GenresText,\n  Genres,\n  FilmImg,\n  FilTitle,\n  AverageRating,\n  LiWrapper,\n  StyledLink,\n  StyledFilmLink,\n} from 'components/StyledComponent/OneFilmPage.styled';\n\nconst OneFilmPage = () => {\n  const API_KEY = 'dfb50cc3b16f950a5a6b0ea437e17f05';\n  const [filmArray, setFilmArray] = useState([]);\n  const { id } = useParams();\n  const location = useLocation();\n  const standartPicture =\n    'https://img.freepik.com/premium-vector/big-problem-businesswomen-sits-on-the-question-mark-sign_70921-125.jpg';\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n\n        return response.json();\n      })\n      .then(data => {\n        setFilmArray(data);\n      })\n      .catch(error => {\n        console.log(`error: ${error}`);\n      });\n  }, [id]);\n\n  const backLinkHref = location?.state?.from ?? '/';\n\n  return (\n    <MainContent>\n      <StyledLink to={backLinkHref}>GoBack</StyledLink>\n      <div>\n        <FilmImg\n          src={\n            filmArray.poster_path\n              ? `https://image.tmdb.org/t/p/w500${filmArray.poster_path}`\n              : standartPicture\n          }\n          alt=\"poster of the film\"\n        />\n        <FilTitle>{filmArray.original_title}</FilTitle>\n        <Overview> Overview: {filmArray.overview}</Overview>\n\n        <GenresWrapper>\n          <GenresText>Genres:</GenresText>\n          {filmArray.genres !== undefined\n            ? filmArray.genres.map(oneGenre => {\n                return <Genres key={oneGenre.id}>{oneGenre.name}</Genres>;\n              })\n            : 'false'}\n        </GenresWrapper>\n\n        <AverageRating>\n          Average rating: {filmArray.vote_average?.toFixed(2)}\n        </AverageRating>\n      </div>\n      <LiWrapper>\n        <li>\n          <StyledFilmLink to=\"actor\" state={{ from: backLinkHref }}>\n            Movie Team\n          </StyledFilmLink>\n        </li>\n        <li>\n          <StyledFilmLink to=\"rewiev\" state={{ from: backLinkHref }}>\n            Rewievs\n          </StyledFilmLink>\n        </li>\n      </LiWrapper>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </MainContent>\n  );\n};\n\nexport default OneFilmPage;\n"],"names":["MainContent","styled","StyledLink","Link","StyledFilmLink","FilmImg","FilTitle","Overview","GenresWrapper","GenresText","Genres","AverageRating","LiWrapper","useState","filmArray","setFilmArray","id","useParams","location","useLocation","useEffect","fetch","then","response","ok","Error","status","json","data","catch","error","console","log","backLinkHref","state","from","to","src","poster_path","alt","original_title","overview","undefined","genres","map","oneGenre","name","vote_average","toFixed","Suspense","fallback"],"sourceRoot":""}